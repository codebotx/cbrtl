<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>project on Chillpost.in</title>
    <link>https://anubhavp.dev/paperblog/tags/project/</link>
    <description>Recent content in project on Chillpost.in</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 14 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://anubhavp.dev/paperblog/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QTree</title>
      <link>https://anubhavp.dev/paperblog/posts/qtree/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://anubhavp.dev/paperblog/posts/qtree/</guid>
      <description>Inspired by KoalasToTheMax, QTree is a short live demonstration of image compression and decompression using Quadtrees that partition a two-dimensional image by recursively subdividing it into four quadrants.</description>
      <content:encoded><![CDATA[<p>I stumbled upon <a href="https://koalastothemax.com/">KoalasToTheMax</a> while reading a blog post about the most exciting web pages built for fun, and I was blown away. <a href="https://injuly.in/">Srijan</a> explained how it works, and we were inspired to create something similar.</p>
<p>But first, let&rsquo;s get into the basics of the data structures used in our project.</p>
<h2 id="quadtree">Quadtree</h2>
<p>A quadtree is a tree-based data structure where each node has exactly four child nodes. Our quadtree represents a partition of space in two dimensions by dividing the region into four equal quadrants. Each quadrant is then subdivided into four equal quadrants, and so on. Each node in the tree has exactly four children or no children at all, which makes it a leaf node. The height of a quadtree depends on the amount of data being decomposed.</p>
<p>
  <img loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/a/a0/Quad_tree_bitmap.svg" alt="quadtree"  /></p>
<p>The root node is the image. Each node is the average value of its children&rsquo;s pixel values. The tree is recursively subdivided until each leaf node is a single pixel. The tree is then traversed to compress the image. To decompress the image, the tree is traversed again.</p>
<h3 id="member-functions">Member Functions</h3>
<p>Our quadtree has the following member functions:</p>
<ul>
<li><strong>compressImageData</strong> : It takes the image data and the compression factor as the input and returns the quadtree.</li>
<li><strong>createQTreeOfHeight</strong> : It takes the height of the tree and the bounding box as the input and returns the quadtree.</li>
<li><strong>populate</strong> : It populates the quadtree with the pixel values.</li>
<li><strong>getRGBValuesFromCoordinates</strong> : It takes the quadtree and the coordinates as the input and returns the pixel value at the given coordinates.</li>
</ul>
<h3 id="node">Node</h3>
<p>The QTNODE class represents a node in the quadtree. It has the following properties:</p>
<ul>
<li><strong>x</strong> : x-coordinate</li>
<li><strong>y</strong> : y-coordinate</li>
<li><strong>w</strong> : width of the bounding box.</li>
<li><strong>h</strong> : height of the bounding box.</li>
<li><strong>children</strong> : array of four children.</li>
<li><strong>rgb</strong> : pixel value of the node.</li>
</ul>
<p>Functions:</p>
<ul>
<li><strong>draw</strong> : draws the node. Takes the canvas context as the input and returns nothing.</li>
<li><strong>insert</strong>: inserts a node into the quadtree. Takes the quadtree and the node as the input and returns the quadtree.</li>
<li><strong>drawAtHeight</strong>: draws the nodes at a given height. Takes the canvas context, the height of the tree, and the current height as the input and returns nothing.</li>
<li><strong>draw</strong>: draws the nodes. Takes the canvas context and the height of the tree as the input and returns nothing.</li>
<li><strong>reveal</strong>: reveals the nodes. Takes the canvas context and the height of the tree as the input and returns nothing.</li>
<li><strong>computeAverageColor</strong>: computes the average color of the node. Takes the quadtree and the image data as the input and returns the pixel value.</li>
</ul>
<h2 id="demonstration">Demonstration</h2>


<div class="container" style="text-align: center;">
	<canvas id="canvas-2"  style="border: 1px solid black;"	>
	</canvas>
	<br>
	
Hover over any part of the canvas to recursively divide it into four quadrants.
</div>



<div class="container" style="text-align: center;">
	<canvas id="canvas-1" style="border: 1px solid black;"> </canvas>
	<br>
	<input type="range" id="slider" min="0" max="100" value="0">
	<br>

The slider controls the depth of the tree.
</div>
 The slider is set to 0 by default, which means the entire image is compressed into a single pixel. The slider when set to 100 means the image is not compressed at all. The slider can be set to any value between 0 and 100.



<script type="module" src="/blog/js/qtree/index.js" ></script>
<script type="module" src="/blog/js/qtree/qdtree.js" ></script>

<h2 id="setting-up-the-canvas">Setting up the Canvas</h2>
<p>To start with, we need two canvases - one for you to hover over and the other for you to control the depth of the tree using a slider and render the nodes evenly. Initially, we had multiple ways of taking an image as the input form, such as uploading an image, using query parameters, etc. But for this demonstration, we&rsquo;ll keep it simple and use a static image.</p>
<p>Here&rsquo;s some JavaScript code that will load the image into a canvas:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="font-weight:bold">const</span> image = <span style="font-weight:bold">new</span> Image();
</span></span><span style="display:flex;"><span>img.src = <span style="font-style:italic">&#34;/blog/assets/images/qtree/cryptopunk.jpeg&#34;</span>;
</span></span><span style="display:flex;"><span>img.onload = () =&gt; {
</span></span><span style="display:flex;"><span>    initSliderCanvas(img);
</span></span><span style="display:flex;"><span>    initMouseCanvas(img);
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><p>I&rsquo;ll go ahead and explain the working of the mouse hover canvas and you can explore the slider canvas. The code is available on <a href="https://github.com/cbrtl/qd-compression">GitHub</a>, and you can play around with it later if you are interested.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="font-weight:bold">import</span> { compressImageData } from <span style="font-style:italic">&#34;./qdtree.js&#34;</span>;
</span></span><span style="display:flex;"><span><span style="font-weight:bold">function</span> initMouseCanvas(img){
</span></span><span style="display:flex;"><span>	<span style="font-weight:bold">const</span> canvas = document.getElementById(<span style="font-style:italic">&#34;canvas-2&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> ctx = canvas.getContext(<span style="font-style:italic">&#34;2d&#34;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> imageData = readImageDataUsingCanvas(canvas, ctx, image);
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> qTree = compressImageData(imageData, 1);
</span></span><span style="display:flex;"><span>    qTree.draw(ctx);
</span></span><span style="display:flex;"><span>	...
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="image-data-compression">Image Data Compression</h3>
<p>Now, let&rsquo;s get to the fun part - compressing images. We import the <code>compressImageData</code> function from the qdtree.js file. This function takes the image data and the compression factor as the input and returns the quadtree. The <strong>height of the tree</strong> is calculated by taking the log of the number of pixels in the image and dividing it by the log of 4. The log of 4 is 2, and the log of the number of pixels is the height of the tree. The height of the tree is then rounded down to the nearest integer. The tree is then created using the <code>createQTreeOfHeight</code> function that takes the height of the tree and the <strong>bounding box</strong> as the input and returns the quadtree.</p>
<p><strong>qdtree.js</strong></p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="font-weight:bold">export</span> <span style="font-weight:bold">function</span> compressImageData(imageData, factor) {
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">const</span> { width, height } = imageData;
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">const</span> newWidth = Math.ceil(width / factor);
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">const</span> newHeight = Math.ceil(height / factor);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">const</span> qTreeHeight = Math.floor(Math.log(newWidth * newHeight) / Math.log(4));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">const</span> qTree = createQTreeOfHeight(qTreeHeight, {
</span></span><span style="display:flex;"><span>    x: 0,
</span></span><span style="display:flex;"><span>    y: 0,
</span></span><span style="display:flex;"><span>    w: width,
</span></span><span style="display:flex;"><span>    h: height,
</span></span><span style="display:flex;"><span>  });
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  populate(qTree, imageData);
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">return</span> qTree;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The <code>createQTreeOfHeight</code> function takes in the height of the tree and the bounding box as the input and returns the quadtree.</p>
<h4 id="bounding-box">Bounding Box</h4>
<p>The bounding box is the area that the node represents. The bounding box is initially the entire image. The bounding box is then divided into four equal quadrants, and the process is repeated until the height of the tree is 0. The <code>populate</code> function takes the quadtree and the image data as the input and populates the tree with the average pixel values of the children&rsquo;s pixel values.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span> <span style="font-weight:bold">function</span> createQTreeOfHeight(height, aabb) {
</span></span><span style="display:flex;"><span>  <span style="font-weight:bold">function</span> recursiveCreate(node, height) {
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">if</span> (height === 0) <span style="font-weight:bold">return</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> { x, y, w, h } = node.aabb;
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> halfW = w / 2;
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> halfH = h / 2;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="font-style:italic">//top left
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span>    node.tl = <span style="font-weight:bold">new</span> QTNode({
</span></span><span style="display:flex;"><span>      x,
</span></span><span style="display:flex;"><span>      y,
</span></span><span style="display:flex;"><span>      w: halfW,
</span></span><span style="display:flex;"><span>      h: halfH,
</span></span><span style="display:flex;"><span>    });
</span></span><span style="display:flex;"><span>		<span style="font-style:italic">//top right
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span>    node.tr = <span style="font-weight:bold">new</span> QTNode({
</span></span><span style="display:flex;"><span>      x: x + halfW,
</span></span><span style="display:flex;"><span>      y,
</span></span><span style="display:flex;"><span>      w: halfW,
</span></span><span style="display:flex;"><span>      h: halfH,
</span></span><span style="display:flex;"><span>    });
</span></span><span style="display:flex;"><span>		<span style="font-style:italic">//bottom left
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span>    node.bl = <span style="font-weight:bold">new</span> QTNode({
</span></span><span style="display:flex;"><span>      x,
</span></span><span style="display:flex;"><span>      y: y + halfH,
</span></span><span style="display:flex;"><span>      w: halfW,
</span></span><span style="display:flex;"><span>      h: halfH,
</span></span><span style="display:flex;"><span>    });
</span></span><span style="display:flex;"><span>		<span style="font-style:italic">//bottom right
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span>    node.br = <span style="font-weight:bold">new</span> QTNode({
</span></span><span style="display:flex;"><span>      x: x + halfW,
</span></span><span style="display:flex;"><span>      y: y + halfH,
</span></span><span style="display:flex;"><span>      w: halfW,
</span></span><span style="display:flex;"><span>      h: halfH,
</span></span><span style="display:flex;"><span>    });
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    recursiveCreate(node.tl, height - 1);
</span></span><span style="display:flex;"><span>    recursiveCreate(node.tr, height - 1);
</span></span><span style="display:flex;"><span>    recursiveCreate(node.bl, height - 1);
</span></span><span style="display:flex;"><span>    recursiveCreate(node.br, height - 1);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span> }
</span></span></code></pre></div><h3 id="image-data-to-quadtree">Image data to Quadtree</h3>
<p>Alright, let&rsquo;s talk about the <code>reveal</code> function, which is like a magician revealing the hidden nodes under the mouse. And then there&rsquo;s the <code>draw</code> function, which is like an artist sketching the nodes on the canvas. The <code>update</code> function is like your mom constantly cleaning up after you every 30 milliseconds. It clears the canvas and redraws the nodes on the canvas, all to make sure it looks neat and tidy.</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="font-weight:bold">function</span> initMouseCanvas(img){
</span></span><span style="display:flex;"><span>	...
</span></span><span style="display:flex;"><span> <span style="font-weight:bold">const</span> mousePos = { x: 0, y: 0 };
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">let</span> lastUpdateTime = -<span style="font-weight:bold">Infinity</span>;
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">const</span> frameTime = 30;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="font-weight:bold">function</span> update() {
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">const</span> currentTime = Date.now();
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">const</span> diff = currentTime - lastUpdateTime;
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">if</span> (diff &lt; frameTime) <span style="font-weight:bold">return</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        lastUpdateTime = currentTime;
</span></span><span style="display:flex;"><span>        ctx.clearRect(0, 0, canvas.width, canvas.height);
</span></span><span style="display:flex;"><span>        qTree.reveal(mousePos.x, mousePos.y);
</span></span><span style="display:flex;"><span>        qTree.draw(ctx);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    canvas.addEventListener(<span style="font-style:italic">&#34;mousemove&#34;</span>, (e) =&gt; {
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">const</span> rect = canvas.getBoundingClientRect();
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">const</span> x = e.clientX - rect.left;
</span></span><span style="display:flex;"><span>        <span style="font-weight:bold">const</span> y = e.clientY - rect.top;
</span></span><span style="display:flex;"><span>        mousePos.x = x;
</span></span><span style="display:flex;"><span>        mousePos.y = y;
</span></span><span style="display:flex;"><span>        update();
</span></span><span style="display:flex;"><span>    });
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="conclusion">Conclusion</h2>
<p>So, what&rsquo;s the point of all this? Well, we can use a quadtree to compress and decompress images when the mouse hovers over a specific area of the canvas. It&rsquo;s like a secret code that unlocks a hidden image!</p>
<p>If you want to explore more, check out the slider and the entire source code on <a href="http://github.com/cbrtl/qd-compression">GitHub</a>. And don&rsquo;t hesitate to ask us any questions or give suggestions. We&rsquo;re always happy to chat on GitHub!</p>
<p><em>Ref: <a href="https://en.wikipedia.org/wiki/Quadtree">Wikipedia</a></em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Decentralization in MetaMUI Wallet: A Case Study</title>
      <link>https://anubhavp.dev/paperblog/posts/metamuiwallet/</link>
      <pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://anubhavp.dev/paperblog/posts/metamuiwallet/</guid>
      <description>A case study on how MetaMUI wallet claims to be decentralized and how it actully works.</description>
      <content:encoded><![CDATA[<p>I am working with <a href="https://squbix.com/">Squbix Digital</a> to build a decentralized, secure and scalable solution using blockchain technology for <a href="https://swnglobal.com/">Sovereign Wallet</a>. The solution is to build a platform to exchange digital assets such as cryptocurrencies and digital currencies across a country/ organization and a cross-border payments system. Here is the <a href="https://sovereignwallet-network.github.io/whitepaper/MetaMUI-Blockchain-White-Paper.pdf">metamui whitepaper</a> and here are some of the things that I couldn&rsquo;t digest well.</p>
<h2 id="metablockchain-core">Metablockchain-core</h2>
<p>Metablockchain: The blockchain that lets you regulate digital currencies and cryptocurrencies across the nation. The platform is built on Polkadot protocol that has significantly better runtime efficiency, is cost-effective, and supports parallel faster transactions when compared to other traditional blockchains. The Polkadot protocol is designed to allow unrelated blockchains to securely talk to each other, so that value or data can flow between, say, the Ethereum and Bitcoin blockchains without any intermediary. It’s also designed to be speedy and scalable, via the use of many parallel blockchains (or “parachains”) that take much of the processing demand off of the main blockchain. The Polkadot network can process more than 1,000 transactions per second, compared to about 7 for Bitcoin and 30 for Ethereum. As the network grows and more parachains are added, Polkadot should get even faster, with speeds that could hit a million transactions per second.</p>
<h3 id="robust-decentralized-and-secure">Robust, decentralized, and secure?</h3>
<p>The product is built in such a way that a country/ government/central banking authority can adopt this platform and make it run parallel with the currently existing infrastructure. Users can send and receive money across the country and it takes significantly less time to handle international transactions. It seems great, an easier way to handle transactions, without having to pay taxes to the government for making international exchanges! But the reality may not be as exciting.</p>
<blockquote>
<p>MetaMUI is claimed to solve the blockchain trilemma by having a hybrid architecture. For micropayment, we
used centralized architecture to achieve high performance and high security. For higher volume payment, we
used decentralized architecture to achieve high security and decentralization.</p>
</blockquote>
<p>The current infrastructure is easy to use but is not as secure as claimed. The primary goal of the infrastructure is to make it easier for users to send and receive (traditional banking) money across the country and, it is not secure because it is <strong>not decentralized</strong>, and <strong>well-developed</strong> . Introducing a blockchain as a means of a runtime to carry out transactions as opposed to a traditional banking system is to make sure that all the transactions are handled in a decentralized manner and anyone when wanted, can query and view the source, and all the states of the transactions but it is not the case here.</p>
<h3 id="issues-with-the-current-infrastructure">Issues with the current infrastructure</h3>
<ol>
<li>
<p><strong>The usage of a private blockchain</strong>.</p>
<p>The banks are responsible for running validator nodes that run on the private blockchain and are responsible for validating the transactions and the states of the system. The claims as said were to improve security and transparency but this approach opposes the purpose of the claims. A private blockchain to carry out transactions makes it a kind of database and a runtime that is not public and not accessible to anyone. The banks are servers and the blockchains act as databases. The clients are the users. Seem familiar? This is a client-server architecture with a blockchain running as a database.</p>
<blockquote>
<p>Bank Node is a publisher of anonymous tokenized cash. Users can choose Bank Node service providers and
have a token contract to issue digital cash. Based on the contract, it can be a debit card or credit card type.
When the user pays the merchant with digital cash, the merchant can claim the digital currency to the issuing
Bank Node. &ldquo;The performance of this payment process should be equal to or better than normal credit card
payments.&rdquo;</p>
</blockquote>
<blockquote>
<p>For high-volume money transfer, MetaMUI utilizes a normal blockchain consensus protocol. All Bank Nodes are
involved in the consensus of multiple digital currencies. Since this a transfer between identities, it is a kind of
digital cheque payment. Also since we are using blockchain consensus to do so instead of a centralized server
for cheque clearance, this is a decentralized cheque system. This payment process is slower than the
conventional credit card payment but it is much faster and costs less than an account-based international bank
transfer.</p>
</blockquote>
<p>Building a platform for carrying out transactions is perfectly okay but introducing blockchains as a means of a just database doesn&rsquo;t make sense. It feels like a gimmick, a buzzword to secure seed &amp; money from investors. Also, there is nothing wrong with a client-server architecture but the speed of current infrastructure relies on implementing a blockchain as a runtime for transactions, which, as always, is <strong>slow</strong>. Blockchains are supposed to be secure and transparent but they are not efficient and fast. The transaction data when accessible publicly make the network secure, which it is not, here. Whereas a more traditional client-server architecture is equally secure and more efficient. Look at the current banking and payment gateway scenario in India. UPI payments, net banking, and debit card payments, are all carried out in a secure environment and are blazing fast.</p>
<blockquote>
<p>A blockchain-style data store is secure but it is not efficient in terms of computation, communication, and data point of view.</p>
</blockquote>
</li>
<li>
<p><strong>The Consensus mechanism</strong></p>
<blockquote>
<p>Consesnus Protocol
MetaMUI’s consensus protocol is a combination of PBFT(Practical Byzantine Fault Tolerance) and PoS(Proof of
Stake). Only Bank Nodes participate in the consensus of built-in blockchains. Bank Node can be a block
proposer and endorser of both built-in blockchains and all digital currency blockchains. The mobile node can
participate in the consensus of newly created digital currencies as an endorser. In the case of digital currency
consensus, <strong>only a Bank Node can be a leader or the block proposer</strong>.</p>
</blockquote>
<p>Bank nodes have the authority to govern, validate transactions and decide the fate of the entire system, which makes the bank a central authority here. This gives authority to the bank nodes to validate any transactions. The bank may decide to invalidate valid transactions or validate invalid transactions and no one would know cause it would be there &ldquo;on the blockchain&rdquo;. (Not saying that this would be done, because a banking sector obviously wouldn&rsquo;t carry out fraudulent transactions.) This does raise a question about the prorposed solution that claims to have solved the blockchain trilemma.</p>
<blockquote>
<p>The leader node also acts as a serializer to serialize transactions. The leader node receives block rewards and
transaction fees. Endorser also receives the endorsing rewards when the node’s endorsement is included in the
majority vote.</p>
</blockquote>
<p>The endorser and leader nodes receive rewards based on the node’s endorsement. The endorser node receives the
endorsement rewards when the node’s endorsement is included in the majority vote. The leader node receives the
block rewards when the node’s block is included in the majority vote. How does a network with an nPOS consensus protocol pay or reward nodes if there are no gas fees involved?</p>
</li>
<li>
<p><strong>ACB (Algorithmic central bank)</strong></p>
<p>The current platform runs a single and private blockchain without any overhead of the AI mechanism that will fuel the infrastructure.
Implementing the Algorithmic Central Bank can be a key player in the industry. The current platform is inefficient when run using a single private blockchain and no centralized banking establishment to control inflation and deflation. The product can be improved when the existing mechanism as proposed in the whitepaper come to play. The current platform might not be a very good solution for the industry unless the stated propositions come to play.</p>
<blockquote>
<p>MetaMUI is just the starting point. We suggested fundamental solutions for Algorithmic Central Bank and a
decentralized, but expandable ecosystem based on mobile nodes. But we believe the current development of
artificial intelligence technologies such as deep learning and reinforcement learning will be the key game changers of the blockchain platform. MetaMUI was designed to take care of these technologies. In near future,
we can see the powerful coordination of more flexibilities based on artificial intelligence and robustness/
stability for transactions based on the blockchain platform.</p>
</blockquote>
<blockquote>
<p>The digitalization of currency opens up new opportunities for digitalized monetary decision-making. Bank node
is an early form of Algorithmic Central Bank that makes monetary decisions based on financial big data. It is
possible to apply a federated learning algorithm at the central bank node and collect and learn a decentralized
model on many mobile nodes.</p>
</blockquote>
</li>
</ol>
<h3 id="ideological-challenges">Ideological challenges</h3>
<p>MetaMUI wallet also lets you regulate digital currencies and crypto-currencies across the world and carry out transactions without having to pay conversion fees. This current implementation of the ideology may become an issue because of the following reasons:</p>
<ol>
<li>
<p><strong>Governments of countries do not generally allow cryptocurrencies to be legal tender.</strong> There are two countries as of now that currently allow cryptocurrencies to be traded and accepted as legal tender and both of them are not the most developed or developing nations in the world. Targeting these countries to sell the platform might not be wise.</p>
<p>Governments usually have a means of regulating easier banking methods and exchange methods. Let us take the example of India. India doesn&rsquo;t allow cryptocurrencies to be legal tender. Digital payments are very popular and online payments being carried out in India follow traditional banking and government norms and are very fast. I don&rsquo;t think anyone in the current generation nowadays goes to the bank to deposit or withdraw money. Let us take another example of the UID system followed in India, <strong>Adhaar</strong> system. The system is encrypted using military-grade encryption. The system is very secure and the government is very responsible for the security of the system. The current implementation of encryption used at MetaMUI Wallet is SHA-256 which although a very secure algorithm would seem like legacy software for the Indian government to integrate and work with. The task is tedious and unnecessary.</p>
<p>There seems no solid revolutionary reason for a bank/government to introduce a new platform to run which regulates and carries out transactions and exchanges for free. Excellent existing platforms are already available and our infrastructure is not a new platform. <em>(Paytm, Gpay, Paypal, CoinDCX etc.)</em></p>
</li>
<li>
<p><strong>Conversion fees are a means of generating tax for a government.</strong> International exchanges or cryptocurrency exchanges are a means of generating tax for a government. When you convert INR to USD or vice versa, you are generating tax for the government. Current conversion from ETH, BTC to INR is a very low fee but there does exist a fee.</p>
<blockquote>
<p>MetaMUI Network is an Internet-based cross-border payment network. In MetaMUI Network, each user’s DID is
a universal accounting address that user can send or receive digital currencies. Utilizing collateral asset feature
and meta-blockchain feature of MetaMUI Blockchain, it is possible to dynamically create meta-coin on the fly to
facilitate cross-border payment between the currencies those are not on the MetaMUI Network. Similar to the
stable coin issuance, central bank or commercial bank of each country can create stable meta-coin on the
MetaMUI Network and perform international fund transfer</p>
</blockquote>
<p>The platform introduced doesn&rsquo;t have gas fees. Gas fees are the fees in a blockchain that you need to pay to make a transaction or carry out a smart contract. A miner validates your transaction by spending its computation power and in return is awarded the gas money. Gas fees are a means of generating revenue for a miner, but having no gas fees in a private blockchain implies that the bank and the infrastructure have to spend money on electricity and computing resources to validate transactions. It doesn&rsquo;t make sense to have a platform that makes you spend money on electricity and computing resources just to validate transactions.</p>
<blockquote>
<p>When users are trading digital stocks or assets in a peer-to-peer way, MetaMUI provides an atomic swap of
digital stock and digital currency. Since digital stock is bind to the user’s identity, ownership transfer notification
and tax payment can happen at the same time as the stock trade. This eliminates the need for separate
shareholder registration, issuance of shareholder certificates, tax reports to the government, and tax payments.</p>
</blockquote>
<p>Let us again take the example of India. Cryptocurrencies when made legal in India would have a 30% conversion fee, you&rsquo;d have to pay a 30% tax to the government for converting the cryptocurrency. It wouldn&rsquo;t make sense for India to allow the platform to run without a conversion fee. Also, there are a lot of other, well-established platforms playing in the same field and pitching and hitting hard in these areas. <em>(CoinDCX, Coinbase, etc)</em></p>
</li>
<li>
<p><strong>Present operating scenario in foreign exchange platforms.</strong></p>
<blockquote>
<p>Cheaper, faster, and efficient cross-border payments are the need of the hour in today’s digital world. The
MetaMUI Network is designed to host multiple blockchains concurrently. Each of these blockchains can run
independently of each other and communicate (transact) with each other. The currency exchange is made
possible through atomic swaps and multi-currency transfer is possible with an exchange service provider
(Master Node) making it excellent for direct sovereign currency to sovereign currency cross-border payments</p>
</blockquote>
<p>The existing exchange platforms are extremely secure, well-established, and highly efficient. The working and operation of these platforms are governed by international laws. The current implementation of MetaMUI Wallet doesn&rsquo;t include any gas fees for transactions. It&rsquo;d either have to tie up with an exchange platform or would have to come up with some other way to convince a country to let it handle all of its transactions. Either way, it would be both cost ineffective solutions. With private blockchains and 0 gas fees, MetaMUI Wallet will be having a hard time trying to carry out free transactions across the globe. The organization, at first, would have to pay for the mining and electricity and on top of that would have to pay the cross-border payment fees too.</p>
</li>
</ol>
<h2 id="a-better-direction">A better direction</h2>
<p>There might exist better, more efficient solutions to the above problems but two of them may have these similar approaches:</p>
<ol>
<li>
<p><strong>Introduce a public blockchain</strong> This solves the problem of spending money on validating transactions. Miners can validate transactions and the government/ bank can verify the transactions. This would be a huge bump in security, transparency, and cost efficiency.</p>
<p>It still doesn&rsquo;t solve the problem of introducing a new platform just to do this. The tax play still becomes an issue here. How does the platform plan on managing taxes? Why would a bank allow a platform to run which would not benefit it in any manner? The government levies taxes to exchange international currencies. Why would it stop doing that? Even if it is allowed, how would it compete with other platforms working towards a similar strategy?</p>
</li>
<li>
<p><strong>Following traditional client-server architecture using a distributed database</strong> This would solve the problem of efficiency. Traditional architectures have been here for a very long time and a lot of research has been done on optimizing the existing infrastructure. Horizontal slicing, vertical slicing, and many other optimization techniques may be used to improve the efficiency of the platform. The platform would be faster, equally secure, and more efficient.</p>
<p>The issue with this approach is the question that what problem is it really trying to solve. Don&rsquo;t there exist platforms that are already doing everything this infrastructure is trying to solve? How would it be able to compete with the existing giants? Isn&rsquo;t the solution building a redundant, regular, exchange banking platform that the world has no less of?  How would the platform differentiate itself? What is MVP, the USP of the platform? If it decides to work together with the government, what ensures that other existing strong infrastructures do not also decide to do this and do it better?</p>
</li>
</ol>
<h3 id="improving-the-current-infrastructure">Improving the current infrastructure</h3>
<p>The approaches may be justified once some of the important issues are addressed. Other than the mentioned problems, a lot of other factors need to pitch in to improve and make the platform more a feasible good product to be sold. The product being built is excellent, no doubt. The deep learning models in the ACB mechanism, the tech being used, the next generation Polkadot blockchains which are much, much faster (1000 transactions per second as compared to 7-10 transactions in traditional blockchain networks) and allow a huge on queries in a much faster time, the faster and more efficient transaction mechanisms, interoperability, the economic scalability, user-driven governance, the forkless upgrades, and the claimed security and transparency, are a step in the right direction, but there are grave issues those still need to be discussed before the product is introduced and launched.</p>
<p><em>Ref: <a href="https://sovereignwallet-network.github.io/whitepaper/MetaMUI-Blockchain-White-Paper.pdf">Whitepaper</a></em></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Why is Web3 a sham?</title>
      <link>https://anubhavp.dev/paperblog/posts/infeasibleweb3/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://anubhavp.dev/paperblog/posts/infeasibleweb3/</guid>
      <description>A short rant on the state of Web3</description>
      <content:encoded><![CDATA[<p>During my short stint as a blockchain developer, I&rsquo;ve learned a lot and have met amazing people.
While I acknowledge the skill and reverence of some developers in this domain,
I still remain uncharmed by the zeal of web3.</p>
<p>If you&rsquo;re a blockchain enthusiast reading this, know that I understand where you stand.
I&rsquo;ve been in your shoes,
and I draw my opinions from personal encounters with the crypto ecosystem.
What I ask of you as a peer then, is that you put your tech under a lens of scrutiny and sever any bonds that may develop into religious fanaticism.
This is true of all engineering, of course.
We cannot improve a technology if we&rsquo;re blind to it&rsquo;s limitations.
And we can&rsquo;t perceive limitations unless we are open to critique.
Critique such as this one.</p>
<p>Most engineers who build blockchains and NFT based projects recognise the technical limitations of this technology.
Yet they choose to write them off as &ldquo;tradeoffs&rdquo; for <em>web3</em>, or worse, turn a blind eye to them.
And then there are the social problems -
ones that are so nuanced that they can&rsquo;t be tackled by any number of token standards or consensus algorithms.
This post is my attempt at shedding some light on the problems that I&rsquo;m aware of.</p>
<h2 id="social">Social</h2>
<h3 id="the-majority-of-crypto-is-shady-even-for-artists">The majority of crypto is shady, even for artists</h3>
<p>Cryptocurrency is always found in a massive web of controversy, frauds and scams.
Show me one successful crypto project that has served a real purpose,
and I&rsquo;ll show you 10 that were outed for being scams.</p>
<p>NFTs claim to be a revolution for artists and creators.
But what happens when someone makes an NFT out of stolen art?
Owing to a blockchain&rsquo;s immutable nature,
the thief now owns the art forever, even if they&rsquo;re found out.</p>
<p>The solution that crypto evangelists propose is that artists should mint an NFT
out of their art before someone else gets the chance.
But this is far from a realistic solution.
A creator should not be bothered with signing tokens on a myriad of different markets and blockchains just to avoid being wronged.
Why should an artist <strong>pay</strong> to register an NFT on Flow, Ethereum, Solana, Monero, Tezos and countless other chains under the sun?</p>
<h3 id="nft-marketplaces-are-centralised-and-controlled">NFT marketplaces are centralised and controlled</h3>
<p>The willingness to be free from institutional regulation and government censorship is at the nexus of &ldquo;web3&rdquo;.
The idea of a government powerless to stop a citizen from owning any digital asset appeals to many.
However under this veil of liberation and freedom lies a truth that no crypto-bro will tell you -
The very marketplace you view and trade your assets on are centralised and controlled.</p>
<p>NFT assets <strong>can</strong> be removed from <a href="https://objkt.com/">objkt</a> and <a href="https://opensea.io/">opensea</a>, you <strong>can</strong> be banned from <a href="https://www.coinbase.com">coinbase</a>.
<a href="https://support.opensea.io/hc/en-us/articles/1500010625362-Why-are-my-items-and-collections-delisted-">Opensea even admits it</a> themselves!
If you violate any of the following vague &ldquo;rules&rdquo;,
your NFT will be delisted from a supposedly &ldquo;decentralised&rdquo; and &ldquo;uncensorable&rdquo; marketplace.</p>
<blockquote>
<ul>
<li>infringe on protected intellectual property,</li>
<li>promote suicide or self-harm,</li>
<li>incite hate or violence against others,</li>
<li>degrade or dox another individual,</li>
<li>otherwise violate our <a href="https://opensea.io/tos">terms of service</a>.</li>
</ul>
</blockquote>
<p>But what constitutes &ldquo;violence or hate against others&rdquo;?
Will I get banned if I make fun of a political figure?
Rather, <strong>Can</strong> I get banned if I make fun of a political figure?
Clearly, the answer is yes.
The people moderating this website do wield that power.
&ldquo;Moderating a decentralised and censor-proof website&rdquo; is an oxymoron,
and how the people trading on such platforms fail to realise this eludes me.</p>
<h3 id="nfts-are-worthless">NFTs are&hellip; worthless?</h3>
<p>In stark contrast with their price tags, the actual value represented by an NFT is surprisingly low.
Say you spend all the money you saved for your child&rsquo;s education to buy this rock NFT:</p>
<p>
  <img loading="lazy" src="https://pbs.twimg.com/profile_images/1423533825028616195/-iFC12qC_400x400.jpg" alt="rock-nft"  /></p>
<p>Now you&rsquo;re pumped with adrenaline, because you <strong>own</strong> this piece of history.
The image is yours, and you claim all rights to its usage and redistribution.
This art piece is now valued as if it were a real and tangible rock, there is only one rock and only one owner - you.</p>
<p>Right? <!-- raw HTML omitted -->
Wrong. <!-- raw HTML omitted -->
The artist still owns the image, and they&rsquo;re entitled to sell it to others,
or even make yet another NFT out of it on a different blockchain and sell it there.</p>
<p>So if you don&rsquo;t own this rock, what exactly do you possess?
The ability to use this on the internet as you please?
So do I. I used it just now, to show you what it looks like.</p>
<p>Had the rock been real,
the owner would&rsquo;ve been capable of sculpting it into a showpiece -
the exact physical properties of which no one else can have.
Or they could use it to assault kids on a street, something noone else could do with the same edge,
for there exists only one.
If I tried to assault children with a similar rock, I wouldn&rsquo;t be subject to the same acclaim as you.
Because my rock and yours have real, physical differences down to the microscopic level.</p>
<p>When an asset is digital, and an image at that, &ldquo;ownership&rdquo; comes with no priviledges.
If you can use it as your twitter avatar, I can too.
And unlike the real world, my avatar has the exact same pixel composition as yours.</p>
<p>Whatever you can do it with it, I can.
Except you now bear a financial loss in pursuit of this &ldquo;ownership&rdquo;
because people told you it means something.</p>
<h3 id="your-get-rich-quick-chances-are-miniscule">Your &lsquo;get-rich-quick&rsquo; chances are miniscule</h3>
<p><strong>The value of an NFT is what you believe it to be.</strong></p>
<p>Crypto evangelists would have you believe this too, except they&rsquo;d word it very differently.
But you can&rsquo;t get the world to agree on this strange belief system
where nearly identical 32x32 pixel people are supposed to encapsulate an &ldquo;idea&rdquo; worth
thousands of dollars.</p>
<p>To most, it just won&rsquo;t make sense.
Why should this clump of pixels cost 1M$?</p>
<p>
  <img loading="lazy" src="https://cryptopotato.com/wp-content/uploads/2021/03/cryptopunk.jpg" alt="cryptopunk"  /></p>
<p>Why should we collectively enforce this belief? <!-- raw HTML omitted -->What can we achieve with this new school of thought that we couldn&rsquo;t before?</p>
<p>Some crypto evangelists answer this with &ldquo;<a href="https://cryptopotato.com/this-cryptopunk-nft-was-bought-for-15k-in-2018-now-sold-for-8-million/">It can make you rich!</a>&rdquo;.
There is a nugget of truth to that,
but it&rsquo;s a very twisted statement that conceals more than it shows.
We&rsquo;ve to realize that this value doesn&rsquo;t come from nowhere.
For you to have gained in this flaky landscape, several others had to lose.
And if general probability theory is anything to go by, you&rsquo;re more likely to find yourself in the losing lot.</p>
<p>MLM scams and pyramid schemes play a surprisingly similar game,
but enough people have already drawn this analogy so that I don&rsquo;t have to.</p>
<h2 id="engineering">Engineering</h2>
<h3 id="nfts-can-be-altered">NFTs CAN be altered</h3>
<p>Unknown to most regular consumers of crypto,
the actual items represented by NFTs they own aren&rsquo;t actually stored on a blockchain.
i.e - the million dollar ape JPEG someone spent their life savings on is physically located somewhere outside Ethereum.
They&rsquo;re stored on a separate database which could be centralised (but generally isn&rsquo;t, like IPFS).
The blockchain itself only stores a URI to the resource in question (say <code>ipfs://foo/bar/orangutan.jpg</code>).</p>
<p>Look at Ethereum&rsquo;s <a href="https://eips.ethereum.org/EIPS/eip-721">EIP-721</a> token standard.
Once you&rsquo;ve made your way through the document, you&rsquo;ll realise there is <strong>nothing</strong> stopping a server
from serving different files at different times of the day for the same URI.
Or serving different files based on where the client requesting the resource is located.
There is even a word for this act, it starts with a <strong>c</strong>, ends with an <strong>r</strong> and rhymes with &ldquo;tensor&rdquo;.
See <a href="https://moxie.org/2022/01/07/web3-first-impressions.html#making-an-nft">this NFT</a> by Moxie Marlinspike as an example.</p>
<h3 id="web3-is-not-technically-feasible">Web3 is not technically feasible</h3>
<p>Ever so often you&rsquo;ll cross web3 enthusiasts on twitter who claim the internet will be decentralized in the near future.
That there will be no institutional control and a governments&rsquo; powers over social media will cease to exist.
And they claim this will be by virtue of a blockchain driven internet, that runs on gas fees.</p>
<p>It just isn&rsquo;t possible.
An advertisement driven web, no matter how terrible, is still far superior to one that is gas fees driven.
When texting, people will always prefer ads to paying out of their own pocket.</p>
<p>However, lets leave the human factors aside for a moment.
Let&rsquo;s imagine a world where humans willingly pay to post instagram selfies.
Even in that universe, blockchain is incapable of supporting such an infrastructure.</p>
<p>Blockchains are <strong>SLOW</strong>. <!-- raw HTML omitted -->
They&rsquo;re simply inefficient when put up against traditional databases and the decades old client-server architechture.
What&rsquo;s even worse is traditional scaling and optimization techniques do not apply to a blockchain.
The optimizations that do exist (<a href="https://wiki.tezosagora.org/build/blockchain-indexers">indexers</a>) are centralized and beat the whole point of web3.</p>
<p>A blockchain is a large append-only merkle tree that needs the computing power of a suburb to confirm a group of transactions, and even then it can take minutes depending on the implementation.
For highly critical transactions,
you&rsquo;ve to wait for 5-6 rounds of &ldquo;confirmation&rdquo; before gaining reasonable confidence in the operation you just performed.</p>
<p>Anyone who has actually studied this subject in appropriate detail would tell you it is impossible for such inefficient technology to withhold traffic on sites like reddit, discord, twitter, facebook, 4chan, youtube etc.</p>
<p>The more energy efficient consensus algorithms, like &ldquo;Proof of Stake&rdquo;, have a different kind of flaw.
They favor miners (called <a href="https://wiki.tezosagora.org/learn/baking">bakers</a> on the Tezos chain) who own more coin.
A classic &ldquo;rich get richer&rdquo; scheme.</p>
<p>This is not to say blockchain is completely useless.
It <strong>might</strong> be used for problems such as food contamination tracing, and verifying ownership of legal documents.
However the world today is in a frenzy to use it in all the places where it doesn&rsquo;t belong.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
